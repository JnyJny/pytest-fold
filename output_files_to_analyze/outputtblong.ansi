=================================================================== test session starts ====================================================================
platform darwin -- Python 3.10.0b2, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
rootdir: /Users/jwr003/coding/pytest-fold, configfile: pyproject.toml, testpaths: tests
plugins: session2file-0.1.11
collecting ... 
collected 18 items                                                                                                                                         

tests/test_pytest_fold.py .F.F.F.FFF...FF..E                                                                                                         [100%]

========================================================================== ERRORS ==========================================================================
_______________________________________________________ ERROR at setup of test_fixture_for_fun_fail ________________________________________________________
file /Users/jwr003/coding/pytest-fold/tests/test_pytest_fold.py, line 135
  def test_fixture_for_fun_fail(fixture_for_fun):
E       fixture 'fixture_for_fun' not found
>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, fold, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory
>       use 'pytest --fixtures [testpath]' for help on them.

/Users/jwr003/coding/pytest-fold/tests/test_pytest_fold.py:135
========================================================================= FAILURES =========================================================================
____________________________________________________________________ test_which_fails_1 ____________________________________________________________________

    [94mdef[39;49;00m [92mtest_which_fails_1[39;49;00m():
>       [94massert[39;49;00m [94m0[39;49;00m
E       assert 0

tests/test_pytest_fold.py:18: AssertionError
____________________________________________________________________ test_which_fails_2 ____________________________________________________________________

    [94mdef[39;49;00m [92mtest_which_fails_2[39;49;00m():
>       [94massert[39;49;00m [94m0[39;49;00m
E       assert 0

tests/test_pytest_fold.py:26: AssertionError
____________________________________________________________________ test_which_fails_3 ____________________________________________________________________

    [94mdef[39;49;00m [92mtest_which_fails_3[39;49;00m():
>       [94massert[39;49;00m [94m0[39;49;00m
E       assert 0

tests/test_pytest_fold.py:34: AssertionError
_______________________________________________________________________ test_fail_1 ________________________________________________________________________

    [94mdef[39;49;00m [92mtest_fail_1[39;49;00m():
        a = [94m0[39;49;00m
        time.sleep([94m0.05[39;49;00m)
>       [94massert[39;49;00m [94mFalse[39;49;00m
E       assert False

tests/test_pytest_fold.py:74: AssertionError
_______________________________________________________________________ test_fail_2 ________________________________________________________________________

    [94mdef[39;49;00m [92mtest_fail_2[39;49;00m():
        a = [94m0[39;49;00m
        time.sleep([94m0.05[39;49;00m)
>       [94massert[39;49;00m [94mFalse[39;49;00m
E       assert False

tests/test_pytest_fold.py:80: AssertionError
_______________________________________________________________________ test_fail_3 ________________________________________________________________________

    [94mdef[39;49;00m [92mtest_fail_3[39;49;00m():
        a = [94m0[39;49;00m
        time.sleep([94m0.05[39;49;00m)
>       [94massert[39;49;00m [94mFalse[39;49;00m
E       assert False

tests/test_pytest_fold.py:86: AssertionError
____________________________________________________________ test_which_fails_and_has_stdout_1 _____________________________________________________________

capsys = <_pytest.capture.CaptureFixture object at 0x1030899c0>

    [94mdef[39;49;00m [92mtest_which_fails_and_has_stdout_1[39;49;00m(capsys):
        [96mprint[39;49;00m([33m"[39;49;00m[33mthis test fails[39;49;00m[33m"[39;49;00m)
>       [94massert[39;49;00m [94m0[39;49;00m == [94m1[39;49;00m
E       assert 0 == 1

tests/test_pytest_fold.py:109: AssertionError
------------------------------------------------------------------- Captured stdout call -------------------------------------------------------------------
this test fails
_______________________________________________________ test_which_pauses_and_fails_and_has_stdout_1 _______________________________________________________

capsys = <_pytest.capture.CaptureFixture object at 0x10317a2c0>

    [94mdef[39;49;00m [92mtest_which_pauses_and_fails_and_has_stdout_1[39;49;00m(capsys):
        [96mprint[39;49;00m([33m"[39;49;00m[33mthis test pauses, then fails[39;49;00m[33m"[39;49;00m)
        time.sleep([94m2[39;49;00m)
>       [94massert[39;49;00m [94m0[39;49;00m == -[94m11[39;49;00m
E       assert 0 == -11

tests/test_pytest_fold.py:115: AssertionError
------------------------------------------------------------------- Captured stdout call -------------------------------------------------------------------
this test pauses, then fails
================================================================= short test summary info ==================================================================
FAILED tests/test_pytest_fold.py::test_which_fails_1 - assert 0
FAILED tests/test_pytest_fold.py::test_which_fails_2 - assert 0
FAILED tests/test_pytest_fold.py::test_which_fails_3 - assert 0
FAILED tests/test_pytest_fold.py::test_fail_1 - assert False
FAILED tests/test_pytest_fold.py::test_fail_2 - assert False
FAILED tests/test_pytest_fold.py::test_fail_3 - assert False
FAILED tests/test_pytest_fold.py::test_which_fails_and_has_stdout_1 - assert 0 == 1
FAILED tests/test_pytest_fold.py::test_which_pauses_and_fails_and_has_stdout_1 - assert 0 == -11
ERROR tests/test_pytest_fold.py::test_fixture_for_fun_fail
=========================================================== [31m[1m8 failed[0m, [32m9 passed[0m, [31m[1m1 error[0m[31m in 2.48s[0m[31m ===========================================================
