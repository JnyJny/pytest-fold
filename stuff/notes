write_fspath_result




======================= FAILURES ========================
_______________________ test_fail _______________________

    def test_fail():
        time.sleep(3)
>       assert False
E       assert False

def main():

tests/test_pytest_fold.py:71: AssertionError

=============== 1 failed, 1 passed in 6.25s =============



(Pdb) report
<TestReport 'tests/test_pytest_fold.py::test_fail' when='call' outcome='failed'>
(Pdb) report.longrepr
ExceptionChainRepr(chain=[(ReprTraceback(reprentries=[ReprEntry(lines=['    def test_fail():', '        time.sleep(3)', '>       assert False', 'E       assert False'], reprfuncargs=ReprFuncArgs(args=[]), reprlocals=None, reprfileloc=ReprFileLocation(path='tests/test_pytest_fold.py', lineno=71, message='AssertionError'), style='long')], extraline=None, style='long'), ReprFileLocation(path='/Users/jeff/coding/pytest-fold/tests/test_pytest_fold.py', lineno=71, message='assert False'), None)])

report.longrepr:
----------------
ExceptionChainRepr(
    chain=[
        (
            ReprTraceback(
                reprentries=[
                    ReprEntry(
                        lines=[
                            "    def test_fail():",
                            "        time.sleep(3)",
                            ">       assert False",
                            "E       assert False",
                        ],
                        reprfuncargs=ReprFuncArgs(args=[]),
                        reprlocals=None,
                        reprfileloc=ReprFileLocation(
                            path="tests/test_pytest_fold.py",
                            lineno=71,
                            message="AssertionError",
                        ),
                        style="long",
                    )
                ],
                extraline=None,
                style="long",
            ),
            ReprFileLocation(
                path="/Users/jeff/coding/pytest-fold/tests/test_pytest_fold.py",
                lineno=71,
                message="assert False",
            ),
            None,
        )
    ]
)

report.longrepr.chain:
---------------------
[
    (
        ReprTraceback(
            reprentries=[
                ReprEntry(
                    lines=[
                        "    def test_fail():",
                        "        time.sleep(3)",
                        ">       assert False",
                        "E       assert False",
                    ],
                    reprfuncargs=ReprFuncArgs(args=[]),
                    reprlocals=None,
                    reprfileloc=ReprFileLocation(
                        path="tests/test_pytest_fold.py",
                        lineno=71,
                        message="AssertionError",
                    ),
                    style="long",
                )
            ],
            extraline=None,
            style="long",
        ),
        ReprFileLocation(
            path="/Users/jeff/coding/pytest-fold/tests/test_pytest_fold.py",
            lineno=71,
            message="assert False",
        ),
        None,
    )
]


report.longrepr.chain[0]: <== (tuple)
-------------------------------------
(
    ReprTraceback(
        reprentries=[
            ReprEntry(
                lines=[
                    "    def test_fail():",
                    "        time.sleep(3)",
                    ">       assert False",
                    "E       assert False",
                ],
                reprfuncargs=ReprFuncArgs(args=[]),
                reprlocals=None,
                reprfileloc=ReprFileLocation(
                    path="tests/test_pytest_fold.py",
                    lineno=71,
                    message="AssertionError",
                ),
                style="long",
            )
        ],
        extraline=None,
        style="long",
    ),
    ReprFileLocation(
        path="/Users/jeff/coding/pytest-fold/tests/test_pytest_fold.py",
        lineno=71,
        message="assert False",
    ),
    None,
)

report.longrepr.chain[0][0]:  <== <class '_pytest._code.code.ReprTraceback'>
----------------------------------------------------------------------------
ReprTraceback(
    reprentries=[
        ReprEntry(
            lines=[
                "    def test_fail():",
                "        time.sleep(3)",
                ">       assert False",
                "E       assert False",
            ],
            reprfuncargs=ReprFuncArgs(args=[]),
            reprlocals=None,
            reprfileloc=ReprFileLocation(
                path="tests/test_pytest_fold.py", lineno=71, message="AssertionError"
            ),
            style="long",
        )
    ],
    extraline=None,
    style="long",
)

report.longrepr.chain[0][0].reprentries:  <== list
--------------------------------------------------
[
    ReprEntry(
        lines=[
            "    def test_fail():",
            "        time.sleep(3)",
            ">       assert False",
            "E       assert False",
        ],
        reprfuncargs=ReprFuncArgs(args=[]),
        reprlocals=None,
        reprfileloc=ReprFileLocation(
            path="tests/test_pytest_fold.py", lineno=71, message="AssertionError"
        ),
        style="long",
    )
]

report.longrepr.chain[0][0].reprentries[0]:  <== <class '_pytest._code.code.ReprEntry'>
-----------------------------------------------------
ReprEntry(
    lines=[
        "    def test_fail():",
        "        time.sleep(1)",
        ">       assert False",
        "E       assert False",
    ],
    reprfuncargs=ReprFuncArgs(args=[]),
    reprlocals=None,
    reprfileloc=ReprFileLocation(
        path="tests/test_pytest_fold.py", lineno=71, message="AssertionError"
    ),
    style="long",
)

report.longrepr.chain[0][0].reprentries[0].lines:
-------------------------------------------------
['    def test_fail():', '        time.sleep(1)', '>       assert False', 'E       assert False']

report.longrepr.chain[0][0].reprentries[0].reprfileloc:
-------------------------------------------------------
ReprFileLocation(path='tests/test_pytest_fold.py', lineno=71, message='AssertionError')



report.longrepr.chain[0][0].reprentries[0].lines


report.longrepr.chain[0][0].reprentries[0].lines.insert(0, "MARKER1")
report.longrepr.chain[0][0].reprentries[0].lines.append("MARKER2")

report.longrepr.chain[0][0].reprentries[0]


list(report.longrepr.chain[0]).insert(0, "MARKER")





@attr.s(eq=False)
class ExceptionChainRepr(ExceptionRepr):
    chain = attr.ib(
        type=Sequence[
            Tuple["ReprTraceback", Optional["ReprFileLocation"], Optional[str]]
        ]
    )



